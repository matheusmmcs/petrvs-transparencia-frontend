name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      env_base64:
        description: "Conteúdo do .env (em base64)"
        required: true

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Obter versão do package.json
        id: extract_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
          echo "Versão detectada: $VERSION"

  build-and-push:
    needs: get-version
    runs-on: ubuntu-latest
    environment: TransparenciaPGD

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Criar arquivo .env a partir do base64
        run: |
          echo "${{ github.event.inputs.env_base64 }}" | base64 --decode > .env
          echo "Arquivo .env criado com sucesso!"
      
      - name: Exibir conteúdo do .env (debug)
        run: cat .env

      - name: Login no GitHub Container Registry (usando Credential Store)
        run: echo "${{ secrets.GHCR_BPD }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Construir e enviar a imagem Docker
        run: |
          VERSION=${{ needs.get-version.outputs.version }}
          echo "Imagem = ghcr.io/${{ github.repository }}:$VERSION"
          IMAGE_NAME=ghcr.io/${{ github.repository }}:$VERSION
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Logout do Docker
        run: docker logout ghcr.io
